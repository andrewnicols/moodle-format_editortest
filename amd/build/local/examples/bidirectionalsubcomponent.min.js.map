{"version":3,"sources":["../../../src/local/examples/bidirectionalsubcomponent.js"],"names":["Component","name","selectors","CONTENT","RENAMER","RESET","state","content","getElement","innerHTML","course","samplestring3","resetvalue","button","addEventListener","_clickReset","bind","target","renderComponent","renamer","setValue","log","error","events","getEvents","element","renamed","detail","_changeValue","component","getValue","watch","handler","_sampleWatcher","newvalue","reactive","dispatch","document","getElementById","courseeditor","BaseComponent"],"mappings":"wOAyBA,OACA,O,i/DAEqBA,CAAAA,C,+HAKR,CAEL,KAAKC,IAAL,CAAY,SAAZ,CAEA,KAAKC,SAAL,CAAiB,CACbC,OAAO,uBADM,CAEbC,OAAO,uBAFM,CAGbC,KAAK,qBAHQ,CAKpB,C,gFAyBgBC,C,sGAEPC,C,CAAU,KAAKC,UAAL,CAAgB,KAAKN,SAAL,CAAeC,OAA/B,C,CAChBI,CAAO,CAACE,SAAR,CAAoBH,CAAK,CAACI,MAAN,CAAaC,aAAjC,CAGA,KAAKC,UAAL,CAAkBN,CAAK,CAACI,MAAN,CAAaC,aAA/B,CAGME,C,CAAS,KAAKL,UAAL,CAAgB,KAAKN,SAAL,CAAeG,KAA/B,C,CACfQ,CAAM,CAACC,gBAAP,CAAwB,OAAxB,CAAiC,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAjC,E,SAGUC,C,CAAS,KAAKT,UAAL,CAAgB,KAAKN,SAAL,CAAeE,OAA/B,C,gBACM,MAAKc,eAAL,CAAqBD,CAArB,CAA6B,0CAA7B,CAAyE,EAAzE,C,QAArB,KAAKE,O,QAEL,KAAKA,OAAL,CAAaC,QAAb,CAAsB,KAAKR,UAA3B,E,qDAEAS,UAAIC,KAAJ,CAAU,8BAAV,E,mBAMEC,C,CAAS,KAAKJ,OAAL,CAAaK,SAAb,E,CACf,KAAKC,OAAL,CAAaX,gBAAb,CAA8BS,CAAM,CAACG,OAArC,CAA8C,WAAc,IAAZC,CAAAA,CAAY,GAAZA,MAAY,CACxD,CAAI,CAACC,YAAL,CAAkBD,CAAM,CAACE,SAAP,CAAiBC,QAAjB,EAAlB,CACH,CAFD,E,0KAKU,CACV,MAAO,CACH,CAACC,KAAK,+BAAN,CAAwCC,OAAO,CAAE,KAAKC,cAAtD,CADG,CAGV,C,kDAEYC,C,CAAU,CACnB,KAAKC,QAAL,CAAcC,QAAd,CAAuB,mBAAvB,CAA4C,eAA5C,CAA6DF,CAA7D,CACH,C,wDAEyB,IAAVT,CAAAA,CAAU,GAAVA,OAAU,CAChBR,CAAM,CAAG,KAAKT,UAAL,CAAgB,KAAKN,SAAL,CAAeC,OAA/B,CADO,CAEtBc,CAAM,CAACR,SAAP,CAAmBgB,CAAO,CAACd,aAC9B,C,iDAEa,CACV,KAAKwB,QAAL,CAAcC,QAAd,CAAuB,mBAAvB,CAA4C,eAA5C,CAA6D,KAAKxB,UAAlE,EACA,GAAI,KAAKO,OAAL,SAAJ,CAAgC,CAC5B,KAAKA,OAAL,CAAaC,QAAb,CAAsB,KAAKR,UAA3B,EACA,KAAKgB,YAAL,CAAkB,KAAKhB,UAAvB,CACH,CACJ,C,oCAhEWK,C,CAAQf,C,CAAW,CAC3B,MAAO,IAAIF,CAAAA,CAAJ,CAAc,CACjByB,OAAO,CAAEY,QAAQ,CAACC,cAAT,CAAwBrB,CAAxB,CADQ,CAEjBkB,QAAQ,CAAEI,SAFO,CAGjBrC,SAAS,CAATA,CAHiB,CAAd,CAKV,C,cAhCkCsC,e","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Example of using subcomponents.\n *\n * @module     format_editortest/local/examples/stateready\n * @package    core_course\n * @copyright  2020 Ferran Recio <ferran@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {BaseComponent} from 'core/reactive';\nimport courseeditor from 'core_course/courseeditor';\nimport log from 'core/log';\n\nexport default class Component extends BaseComponent {\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'watcher';\n        // Default query selectors.\n        this.selectors = {\n            CONTENT: `[data-for='content']`,\n            RENAMER: `[data-for='renamer']`,\n            RESET: `[data-for='reset']`,\n        };\n    }\n\n    /**\n     * Static method to create a component instance form the mustahce template.\n     *\n     * We use a static method to prevent mustache templates to know which\n     * reactive instance is used.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     * @param {object} selectors optional css selector overrides\n     * @return {Component}\n     */\n    static init(target, selectors) {\n        return new Component({\n            element: document.getElementById(target),\n            reactive: courseeditor,\n            selectors,\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     *\n     * @param {object} state the initial state\n     */\n    async stateReady(state) {\n        // Update the value.\n        const content = this.getElement(this.selectors.CONTENT);\n        content.innerHTML = state.course.samplestring3;\n\n        // Save the reset value.\n        this.resetvalue = state.course.samplestring3;\n\n        // Bind reset button.\n        const button = this.getElement(this.selectors.RESET);\n        button.addEventListener('click', this._clickReset.bind(this));\n\n        try {\n            const target = this.getElement(this.selectors.RENAMER);\n            this.renamer = await this.renderComponent(target, 'format_editortest/local/examples/renamer', {});\n            // In this case, we use a component public method to set the value, instead of the mustache data.\n            this.renamer.setValue(this.resetvalue);\n        } catch (error) {\n            log.error('Cannot load renamer template');\n            throw error;\n        }\n\n        // For bidirectional relations, we can use the getEvents directly form the instance,\n        // instead of using the static method from the abstract class.\n        const events = this.renamer.getEvents();\n        this.element.addEventListener(events.renamed, ({detail}) => {\n            this._changeValue(detail.component.getValue());\n        });\n    }\n\n    getWatchers() {\n        return [\n            {watch: `course.samplestring3:updated`, handler: this._sampleWatcher},\n        ];\n    }\n\n    _changeValue(newvalue) {\n        this.reactive.dispatch('changeCourseValue', 'samplestring3', newvalue);\n    }\n\n    _sampleWatcher({element}) {\n        const target = this.getElement(this.selectors.CONTENT);\n        target.innerHTML = element.samplestring3;\n    }\n\n    _clickReset() {\n        this.reactive.dispatch('toggleCourseValue', 'samplestring3', this.resetvalue);\n        if (this.renamer !== undefined) {\n            this.renamer.setValue(this.resetvalue);\n            this._changeValue(this.resetvalue);\n        }\n    }\n}\n"],"file":"bidirectionalsubcomponent.min.js"}